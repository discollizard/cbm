// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteCobmais.Data;

#nullable disable

namespace TesteCobmais.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230825234907_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteCobmais.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("TesteCobmais.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DividaId")
                        .HasColumnType("int");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("TesteCobmais.Models.LogConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AtrasoEmDias")
                        .HasColumnType("int");

                    b.Property<DateTime>("ConsultaTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("ContratoId")
                        .HasColumnType("int");

                    b.Property<float>("DescontoMaximo")
                        .HasColumnType("real");

                    b.Property<float>("ValorAtualizado")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ContratoId");

                    b.ToTable("LogConsultas");
                });

            modelBuilder.Entity("TesteCobmais.Models.Contrato", b =>
                {
                    b.HasOne("TesteCobmais.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("TesteCobmais.Models.LogConsulta", b =>
                {
                    b.HasOne("TesteCobmais.Models.Contrato", "contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contrato");
                });
#pragma warning restore 612, 618
        }
    }
}
